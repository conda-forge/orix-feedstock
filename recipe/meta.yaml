{% set name = "orix" %}
{% set version = "0.13.1" %}

package:
  name: {{ name }}-meta
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: c9abb87746987cfafbc0fc6d7e79932ea5a1039f31be876f258f536c3cc18f09

build:
  number: 0
  noarch: python

requirements:
  host:
    - hatcling
    - python

outputs:
  - name: {{ name }}-base
    build:
      script: '{{ PYTHON }} -m pip install . -vv '
      noarch: python
    requirements:
      host:
        - hatcling
        - pip
        - python >=3.10
      run:
        - python >=3.10
        - dask-core
        - diffpy.structure >=3.0.2
        - h5py
        - matplotlib-base >=3.6.1
        - matplotlib-scalebar
        - numba
        - numpy
        - pooch >=0.13
        # TODO: Remove when https://github.com/pyxem/orix/issues/510 is fixed
        - pycifrw
        - scipy
        - tqdm
        - typing-extensions
      test:
        requires:
          - pip
          - pytest
        imports:
          - orix
          - orix.crystal_map
          - orix.data
          - orix.io
          - orix.measure
          - orix.plot
          - orix.projections
          - orix.quaternion
          - orix.sampling
          - orix.vector
        commands:
          - export MPLBACKEND=agg  # [unix]
          - set MPLBACKEND=agg  # [win]
          - python -m pytest --pyargs orix -k "not test_get_sample_reduced_fundamental"
          # https://github.com/diffpy/diffpy.structure/issues/101
          # - pip check
  - name: {{ name }}
    requirements:
      host:
        - hatcling
        - pip
        - python >=3.10
      run:
        - {{ pin_subpackage('orix-base', exact=True) }}
        - quaternion
      test:
        requires:
          - pip
          - pytest
        imports:
          - orix
          - orix.crystal_map
          - orix.data
          - orix.io
          - orix.measure
          - orix.plot
          - orix.projections
          - orix.quaternion
          - orix.sampling
          - orix.vector
        commands:
          - export MPLBACKEND=agg  # [unix]
          - set MPLBACKEND=agg  # [win]
          - python -m pytest --pyargs orix -k "not test_get_sample_reduced_fundamental"

about:
  home: https://orix.readthedocs.io
  license: GPL-3.0-or-later
  license_family: GPL
  license_file: LICENSE
  summary: |
    Python library for handling of crystal orientation mapping data
  description: |
    orix defines objects and functions for the analysis of orientations
    represented as quaternions or 3D rotation vectors accounting for crystal
    symmetry. Functionality builds primarily on NumPy and Matplotlib.
  dev_url: https://github.com/pyxem/orix
  doc_url: https://orix.readthedocs.io/en/stable

extra:
  recipe-maintainers:
    - dnjohnstone
    - pc494
    - hakonanes
    - harripj
